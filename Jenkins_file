pipeline {
    agent any

    environment {
        SONARQUBE_SCANNER_HOME = tool name: 'SonarQubeScanner'  // Matches the SonarQube scanner tool in Jenkins
        SONAR_PROJECT_KEY = 'React_Error_Code'  // Unique identifier for your project
        GITHUB_REPO = 'https://github.com/simonebinezer/React_code.git'
        SONAR_HOST_URL = 'http://54.189.47.219:9000'  // SonarQube server address
        SONAR_TOKEN = credentials('Sonar_Token')  // Jenkins credentials for the SonarQube token
    }

    stages {
        stage('Checkout SCM') {
            steps {
                // Checkout the code from GitHub
                git branch: 'main', url: "${GITHUB_REPO}"
            }
        }

        stage('Run SonarQube Analysis') {
            steps {
                timeout(time: 10, unit: 'MINUTES') { // Timeout for SonarQube analysis
                    withSonarQubeEnv('SonarQube') { // Ensure the environment matches Jenkins' SonarQube server configuration
                        script {
                            def scannerHome = tool name: 'SonarQubeScanner' // Ensure tool name matches
                            sh """
                                ${scannerHome}/bin/sonar-scanner \
                                -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                                -Dsonar.host.url=${SONAR_HOST_URL} \
                                -Dsonar.login=${SONAR_TOKEN} \
                                -X
                            """
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed!'
        }
        failure {
            echo 'Pipeline failed due to quality gate failure or errors in the pipeline.'
        }
    }
}
